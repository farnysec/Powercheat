Symbol	Function										                Example
#  Declare comment line.                            #This is my code below
$  Declare a variable.                              $Name
+  Concatenate.                                     $test = "42" + "Slim Shady" + "Eminem" ; Write-host $test
|  Take output from first cmd; pass to second.      Get-Process | Sort-Object -Property id
%  Foreach-Object.                                  1,2,3 | ForEach-Object {write-host "Something"}		->		1,2,3 | % {write-host "Something"}
$_ Current piped object $PSItem.                    1,2,3 | Where-Object {$_ -gt 1}
?  Where-Object.                                    Get-Service | Where-Object {$_.name -Match "win"}	->		Get-Service | ? {$_.name -Match "w"}
;  Run multiple commands on same line.              $Name="Jes"; Write-Host $Name
{} Enclose block of code.                           Get-Wmiobject -list | where {$_.name -match "win32*"}
&  Background job									

Special Characters

`0	Null
`a	Alert
`b	Backspace
`e	Escape
`f	Form feed
`n	New line
`r	Carriage return
`t	Horizontal tab
`u{x}	Unicode escape sequence
`v	Vertical tab


How-to: Redirection
  command >  filename     # Redirect command output to a file (overwrite)
  command >> filename     # APPEND into a file
  command 2> filename     # Redirect Errors from operation to a file(overwrite)
  command 2>> filename    # APPEND errors to a file
  command 2>&1            # Add errors to results
  command 1>&2            # Add results to errors
  command | command       # This is the basic form of a PowerShell Pipeline


Comparison Operators
-eq, -ne, -gt, -lt, -le, -ge

Logical Operators
-and, -or, -xor, -not, !

Split and Join Operators
-split and -join





